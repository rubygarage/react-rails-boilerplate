// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignIn container renders SignIn component 1`] = `
<Connect(Form(SignIn))
  destroyOnUnmount={true}
  enableReinitialize={false}
  fieldsForValidation={
    Array [
      "username",
      "password",
    ]
  }
  forceUnregisterOnUnmount={false}
  form="signIn"
  getFormState={[Function]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "app.loading": "Loading",
        "confirmation_instructions.check_email": "Check your email for confirmation",
        "confirmation_instructions.help_email": "Verify if you typed your email correctly",
        "confirmation_instructions.help_header": "Note: If you do not receive the email in few minutes:",
        "confirmation_instructions.help_spam": "Check spam folder",
        "confirmation_instructions.help_support": "Contact support",
        "confirmation_instructions.thanks": "Thanks for signing up!",
        "email_confirmation.login": "Login",
        "email_confirmation.success": "You have successfully confirmed your email address.",
        "header.logout": "Sign out",
        "header.my_profile": "My profile",
        "header.sign_in": "Sign In",
        "header.sign_up": "Sign Up",
        "header.signin": "Sign In",
        "landing.header": "Static Landing",
        "landing.lead_message": "This is a RubyGarage template for isomorphic ( universal ) react-redux application",
        "landing.note": "Be sure to change this to something else before deploying :)",
        "not_found.404": "404",
        "not_found.sign_in": "Sign In",
        "not_found.sign_up": "Sign Up",
        "not_found.sorry": "Sorry, but the page you are looking for was either not found or does not exist.",
        "not_found.title": "We could not find the page..",
        "not_found.to_home": "Home",
        "not_found.try": "Try refreshing the page or click the button below to go back to the Homepage.",
        "restore_password.change_my_password": "Change my password",
        "restore_password.confirm_password": "Confirm password",
        "restore_password.header": "Restore password",
        "restore_password.instructions": "We've emailed you a link that you can follow to change your password, you should receive it shortly",
        "restore_password.new_password": "New password",
        "restore_password.send_instructions": "Send me instructions",
        "restore_password.your_email": "Your email",
        "sign_in.dont_have_account": "Donâ€™t have account?",
        "sign_in.email_address": "E-mail address",
        "sign_in.enter_password": "Enter Password",
        "sign_in.enter_username": "Enter Username",
        "sign_in.forgot_password": "Forgot your password?",
        "sign_in.learn_more": "Learn more",
        "sign_in.log_in": "Log In",
        "sign_in.log_in_via_socials": "Log in via socials",
        "sign_in.login": "Login",
        "sign_in.login_with": "Login with",
        "sign_in.not_a_member_yet": "Not a member yet?",
        "sign_in.or": "or",
        "sign_in.password": "Password",
        "sign_in.register": "Register",
        "sign_in.remember_me": "Remember me",
        "sign_in.sign_up": "Sign Up",
        "sign_in.username": "Username",
        "sign_up.already_have_an_account": "Already have an account?",
        "sign_up.already_member": "Already a member?",
        "sign_up.back": "Back",
        "sign_up.confirm_password": "Confirm Password",
        "sign_up.continue": "Continue",
        "sign_up.create_account": "Create account",
        "sign_up.create_an_account_via_socials": "Create an account via socials",
        "sign_up.create_your_password": "Create your Password",
        "sign_up.email": "Email",
        "sign_up.enter_email": "Enter Email",
        "sign_up.enter_username": "Enter Username",
        "sign_up.learn_more": "Learn more",
        "sign_up.log_in": "Log In",
        "sign_up.login": "Login",
        "sign_up.login_with": "Login with",
        "sign_up.next": "Next",
        "sign_up.or": "or",
        "sign_up.password": "Password (at least 8 symbols)",
        "sign_up.register": "Register",
        "sign_up.steps.done": "Done",
        "sign_up.username": "Username",
        "user.avatar": "Avatar:",
        "user.avatar_alt": "User avatar",
        "user.edit_user_data": "Edit User data",
        "user.email": "Email:",
        "user.no_avatar": "none",
        "user.title": "This is User page",
        "user.username": "Username:",
        "user_edit.avatar": "Avatar",
        "user_edit.avatar_alt": "User current avatar",
        "user_edit.remove_avatar": "Remove avatar",
        "user_edit.save_changes": "Save Changes",
        "user_edit.title": "User profile edit page for {name}",
        "validation.blank": "can't be blank",
        "validation.invalid_email": "Invalid email address",
        "validation.max_length": "{field} is too long (maximum is {count} characters)",
        "validation.min_length": "{field} is too short (minimum is {count} characters)",
        "validation.password_confirmation_does_not_match_the_password": "Password confirmation does not match the password",
        "validation.required": "Required",
        "validation.required_agreements": "Please, check agreements",
        "validation.required_field": "{field} is required",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  keepDirtyOnReinitialize={false}
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
/>
`;
